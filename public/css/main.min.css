body{-webkit-box-sizing:border-box;box-sizing:border-box;line-height:1}img{width:100%;height:100%}a,li,ul{left:0;text-decoration:none}a,li{list-style:none}a,abbr,acronym,address,applet,b,big,blockquote,body,caption,center,cite,code,dd,del,dfn,div,dl,dt,em,fieldset,font,form,h1,h2,h3,h4,h5,h6,html,i,iframe,img,ins,kbd,label,legend,li,object,ol,p,pre,q,s,samp,small,span,strike,strong,sub,sup,table,tbody,td,tfoot,th,thead,tr,tt,u,ul,var{margin:0;padding:0;border:0;outline:0;font-size:100%;vertical-align:baseline;background:0 0}ol,ul{list-style:none}blockquote,q{quotes:none}blockquote:after,blockquote:before,q:after,q:before{content:none}:focus{outline:0}ins{text-decoration:none}del{text-decoration:line-through}table{border-collapse:collapse;border-spacing:0}@font-face{font-family:"Intro";src:url(../fonts/intro/intro.otf) format("truetype");font-style:normal;font-weight:400}@font-face{font-family:"Ptsans";src:url(../fonts/ptsans/PTSans-Bold.ttf) format("truetype");font-style:normal;font-weight:700}@font-face{font-family:"Ptsans";src:url(../fonts/ptsans/PTSans-Regular.ttf) format("truetype");font-style:normal;font-weight:400}.container{width:1710px;margin:0 auto}.header{height:101px}.header__container{display:-webkit-box;display:-ms-flexbox;display:flex}.header__logo{height:101px}.header__sub-menu{display:none;position:absolute;background:#eff7fc;width:226px;left:-32px;top:56px;padding:12px 14px 20px 16px;border-top:1px solid #c8d4dc;border-radius:0 0 6px 6px}.header__sub-menu-item{padding:7px 0 8px 14px;border-bottom:1px solid #c8d4dc;line-height:21xpx}.header__sub-menu-item:last-child{border-bottom:0}.header__sub-menu a{font:400 16px "Ptsans";color:#404541}.header__left-side{display:-webkit-box;display:-ms-flexbox;display:flex}.header__name{padding-top:17px}.header__name-top{font:700 16px/21px "Ptsans";color:#404541;text-transform:uppercase;padding-left:4px}.header__name-sub{font:400 24px/24px "Intro";padding-top:4px;color:#168b5a;text-transform:uppercase}.header__menu{font:400 16px/21px "Ptsans";display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;height:101px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;margin-left:71px}.header__menu a{color:#404541}.header__menu-item{position:relative;margin-left:71px;cursor:pointer}.header__menu-item::before{content:"";position:absolute;top:100%;left:-30px;height:40px;width:226px}.header__menu-item:first-child{margin-left:0}.header__menu-item:last-child{margin-left:55px}.header__menu-item:hover img{-webkit-transform:rotate(180deg);-ms-transform:rotate(180deg);transform:rotate(180deg)}.header__menu-item:hover .header__sub-menu{display:block}.header__menu-item img{height:12px;width:12px;margin-left:8px;fill:#404541}.header__social{display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;margin-bottom:6px}.header__social-item{width:20px;height:20px}.header__social-item:hover{fill:#404541}.header__right-side{margin-left:211px;display:-webkit-box;display:-ms-flexbox;display:flex;width:311px;height:101px;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;padding-top:6px;justify-items:end}.header__contact{width:244px}.header__search{background:url(../img/search/search.svg) no-repeat center;margin-top:30px;border-radius:100%;border:2px solid #8a8e90;width:24px;height:24px}.header__search:active,.header__search:focus{background-position:101% center;width:200px;border-radius:15px;margin-left:-176px}.header__message{height:29px;-webkit-box-align:center;-ms-flex-align:center;align-items:center;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between}.header__message,.header__message-item,.header__message-item a{display:-webkit-box;display:-ms-flexbox;display:flex}.header__message-item img{width:24px;margin-right:8px}.header__message-item a{font:400 18px "Ptsans";-webkit-box-align:center;-ms-flex-align:center;align-items:center;color:#404541}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uc2FzcyIsIm1haW4ubWluLmNzcyIsImluY2x1ZGVzL2NvbnRhaW5lci9jb250YWluZXIuc2FzcyIsIm1haW4uY3NzIiwicmVzZXQuc2NzcyIsImZvbnRzLnNjc3MiLCJpbmNsdWRlcy9oZWFkZXIvaGVhZGVyLnNhc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSSxDQUNJLDZCLENDQ0YscUIsQ0NGRixhLENGRUEsRyxDQUNJLFUsQ0FDQSxXLENDUUosQyxDQURBLEUsQ0ROQSxFLENBS0ksTSxDQ09GLG9CLENBTEYsQyxDQURBLEUsQ0VJQSxlLENDRUEsQyxDSG9CQSxJLENFQUEsTyxDRkVBLE8sQ0FmQSxNLENHY0EsQyxDQWxCQSxHLENEYUEsVSxDSGpDQSxJLENDMkVBLE8sQ0FaQSxNLENBdEJBLEksQ0VBQSxJLENBd0JBLEUsQ0Z0QkEsRyxDR3BCQSxHLENIREEsRyxDR21CQSxFLENId0JBLEUsQ0FwQkEsRSxDQXlCQSxRLENFekJBLEksQ0YwQkEsSSxDQTVDQSxFLENBQ0EsRSxDQUNBLEUsQ0FDQSxFLENBQ0EsRSxDQUNBLEUsQ0FaQSxJLENFeUNBLEMsQ0ZuQ0EsTSxDQXFCQSxHLENHckJBLEcsQ0h1QkEsRyxDRXNCQSxLLENGRUEsTSxDRzNCQSxFLENIckJBLE0sQ0EwQ0EsRSxDQWxDQSxDLENBRUEsRyxDQWVBLEMsQ0FDQSxDLENFQUEsSSxDRkVBLEssQ0E5QkEsSSxDR1NBLE0sQ0FDQSxNLENIdUJBLEcsQ0VBQSxHLENFeERBLEssQ0o0RUEsSyxDQUtBLEUsQ0FKQSxLLENJdkVBLEUsQ0p3RUEsSyxDRUFBLEUsQ0ZwQkEsRSxDQUdBLEMsQ0doQkEsRSxDQVJBLEcsQ0M3QkksUSxDQUNBLFMsQ0FDQSxRLENGMEVKLFMsQ0V4RUEsYyxDQUNJLHVCLENBQ0EsYyxDRmdGSixFLENGRUEsRSxDS2hHQSxlLENBR0ksVSxDTGtHSixDLENLakdRLFcsQ0xzR1IsZ0IsQ0tyR0ksaUIsQ0FFQSxPLENIaUdKLFEsQ0cvRlEsWSxDTDBHUixNLENLcEdRLFMsQ0wwR1IsRyxDS3JHWSxvQixDTHlHWixHLENFRkEsNEIsQ0ZRQSxLLENFRkEsd0IsQ0duR0ksZ0IsQ0wwR0osV0VKQSxtQixDR3BHSSxvRCxDQUNJLGlCLENIc0dSLGdCLEFGUUEsV0sxR1ksb0IsQ0FDQSwyRCxDQUNBLGlCLENBQ0EsZ0IsQUFFSixXQUNJLG9CLENBQ0EsOEQsQ0FDQSxpQixDQUNBLGdCTCtHWixVLENFSkEsWSxDR3ZHSSxhLENMZ0hKLE8sQ0s5R1EsWSxDTGtIUixrQixDS2hIUSxtQixDQUNBLG1CLENBQ0EsWSxDTG9IUixhLENLbEhRLFksQ0FFQSxpQixDQUNJLFksQ0gwR1osaUIsQ0d6R1Esa0IsQ0FDSSxXLENBQ0EsVSxDQUNBLFEsQ0gyR1osMkIsQ0cxR1ksNEIsQ0FDSSx5QixDTHlIaEIsc0IsQ0tySGdCLHNCLENBQ0EsK0IsQ0g0R2hCLGlCLENBR0EsaUMsQ0czR1ksZSxDQUdJLG1CLENBQ0ksc0IsQ0x3SGxCLGEsQ0t2SGMsa0IsQ0FDSSxtQixDSDhHcEIsbUIsQ0c3R1ksWSxDTDhIWixhLENLMUhnQixnQixDTDhIaEIsaUIsQ0s1SFEsMkIsQ0FBQSxhLENBQ0Esd0IsQ0wrSE4sZ0IsQ0VkRixpQixDRy9HUSwwQixDQUNJLGUsQ0FDQSxhLENIaUhaLHdCLENBR0EsYSxDR2pISSwyQixDQUNJLG1CLENBQ0EsbUIsQ0FBQSxZLENBQUEsd0IsQ0FDQSxxQixDQUNBLDZCLENBQ0EsWSxDTHNJTix3QixDQUNBLHFCLENLdElNLGtCLENBQ0EsZ0IsQ0wwSVIsZSxDRXBCQSxhLENGd0JBLGtCLENLeElRLGlCLENBQ0EsZ0IsQ0FDQSxjLENIdUhSLDBCLENHbkhRLFUsQ0FDSSxpQixDQUNBLFEsQ0FDQSxVLENBQ0EsVyxDSHFIWixXLENGd0JBLDhCLENLMUlRLGEsQ0w4SVIsNkIsQ0FDRSxnQixDQUdGLDRCLENFMUJBLGdDLENHcEhRLDRCLENBQ0ksd0IsQ0hzSFosMEMsQ0dySFksYSxDSHlIWixzQixDR3RIWSxXLENBQ0ksVSxDQUNBLGUsQ0FDQSxZLENMdUpoQixlLENBQ0UsbUIsQ0FDQSxtQixDS3ZKYyxZLENBQ0Esd0IsQ0h3SGhCLHFCLENGa0NFLDZCLENBQ0EsaUIsQ0FHRixvQixDQUNFLFUsQ0FDQSxXLENBR0YsMEIsQ0FDRSxZLENBR0YsbUIsQ0FDRSxpQixDQUNBLG1CLENBQ0EsbUIsQ0FDQSxZLENBQ0EsVyxDQUNBLFksQ0FDQSx3QixDQUNBLHFCLENBQ0EsNkIsQ0FDQSxlLENBQ0EsaUIsQ0FHRixnQixDQUNFLFcsQ0FHRixlLENBQ0UseUQsQ0FDQSxlLENBQ0Esa0IsQ0FDQSx3QixDQUNBLFUsQ0FDQSxXLENBSUYsc0IsQ0FEQSxxQixDQUVFLCtCLENBQ0EsVyxDQUNBLGtCLENBQ0Esa0IsQ0FHRixnQixDQUlFLFcsQ0FDQSx3QixDQUNBLHFCLENBQ0Esa0IsQ0FDQSx3QixDQUNBLHFCLENBQ0EsNkIsQ0FWRixnQixDQWFBLHFCLENBV0EsdUIsQ0FWRSxtQixDQUNBLG1CLENBQ0EsWSxDQUdGLHlCLENBQ0UsVSxDQUNBLGdCLENBR0YsdUIsQ0FDRSxzQixDQUlBLHdCLENBQ0EscUIsQ0FDQSxrQixDQUNBLGEiLCJmaWxlIjoibWFpbi5taW4uY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keVxyXG4gICAgYm94LXNpemluZzogYm9yZGVyLWJveFxyXG5pbWdcclxuICAgIHdpZHRoOiAxMDAlXHJcbiAgICBoZWlnaHQ6IDEwMCVcclxudWwsIGxpLCBhXHJcbiAgICBtYXJnaW46IDBcclxuICAgIHBhZGRpbmc6IDAgIFxyXG4gICAgbGVmdDogMFxyXG4gICAgbGlzdC1zdHlsZTogbm9uZVxyXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBub25lXHJcblxyXG5AaW1wb3J0IFwicmVzZXQuc2Nzc1wiXHJcbkBpbXBvcnQgXCJmb250cy5zY3NzXCJcclxuQGltcG9ydCBcImNvbG9yLnNhc3NcIlxyXG5AaW1wb3J0IFwiaW5jbHVkZXMvY29udGFpbmVyL2NvbnRhaW5lci5zYXNzXCJcbkBpbXBvcnQgXCJpbmNsdWRlcy9oZWFkZXIvaGVhZGVyLnNhc3NcIlxyXG4iLCJib2R5IHtcbiAgLXdlYmtpdC1ib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5pbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG51bCxcbmxpLFxuYSB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGVmdDogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufVxuXG5odG1sLFxuYm9keSxcbmRpdixcbnNwYW4sXG5hcHBsZXQsXG5vYmplY3QsXG5pZnJhbWUsXG5oMSxcbmgyLFxuaDMsXG5oNCxcbmg1LFxuaDYsXG5wLFxuYmxvY2txdW90ZSxcbnByZSxcbmEsXG5hYmJyLFxuYWNyb255bSxcbmFkZHJlc3MsXG5iaWcsXG5jaXRlLFxuY29kZSxcbmRlbCxcbmRmbixcbmVtLFxuZm9udCxcbmltZyxcbmlucyxcbmtiZCxcbnEsXG5zLFxuc2FtcCxcbnNtYWxsLFxuc3RyaWtlLFxuc3Ryb25nLFxuc3ViLFxuc3VwLFxudHQsXG52YXIsXG5iLFxudSxcbmksXG5jZW50ZXIsXG5kbCxcbmR0LFxuZGQsXG5vbCxcbnVsLFxubGksXG5maWVsZHNldCxcbmZvcm0sXG5sYWJlbCxcbmxlZ2VuZCxcbnRhYmxlLFxuY2FwdGlvbixcbnRib2R5LFxudGZvb3QsXG50aGVhZCxcbnRyLFxudGgsXG50ZCB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgYm9yZGVyOiAwO1xuICBvdXRsaW5lOiAwO1xuICBmb250LXNpemU6IDEwMCU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbmJvZHkge1xuICBsaW5lLWhlaWdodDogMTtcbn1cblxub2wsXG51bCB7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG59XG5cbmJsb2NrcXVvdGUsXG5xIHtcbiAgcXVvdGVzOiBub25lO1xufVxuXG5ibG9ja3F1b3RlOmJlZm9yZSxcbmJsb2NrcXVvdGU6YWZ0ZXIsXG5xOmJlZm9yZSxcbnE6YWZ0ZXIge1xuICBjb250ZW50OiBcIlwiO1xuICBjb250ZW50OiBub25lO1xufVxuXG4vKiByZW1lbWJlciB0byBkZWZpbmUgZm9jdXMgc3R5bGVzISAqL1xuXG46Zm9jdXMge1xuICBvdXRsaW5lOiAwO1xufVxuXG4vKiByZW1lbWJlciB0byBoaWdobGlnaHQgaW5zZXJ0cyBzb21laG93ISAqL1xuXG5pbnMge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmRlbCB7XG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xufVxuXG4vKiB0YWJsZXMgc3RpbGwgbmVlZCAnY2VsbHNwYWNpbmc9XCIwXCInIGluIHRoZSBtYXJrdXAgKi9cblxudGFibGUge1xuICBib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xuICBib3JkZXItc3BhY2luZzogMDtcbn1cblxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIkludHJvXCI7XG4gIHNyYzogdXJsKFwiLi4vZm9udHMvaW50cm8vaW50cm8ub3RmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJQdHNhbnNcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9wdHNhbnMvUFRTYW5zLUJvbGQudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJQdHNhbnNcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9wdHNhbnMvUFRTYW5zLVJlZ3VsYXIudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG5cbi5jb250YWluZXIge1xuICB3aWR0aDogMTcxMHB4O1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuLmhlYWRlciB7XG4gIGhlaWdodDogMTAxcHg7XG59XG5cbi5oZWFkZXJfX2NvbnRhaW5lciB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmhlYWRlcl9fbG9nbyB7XG4gIGhlaWdodDogMTAxcHg7XG59XG5cbi5oZWFkZXJfX3N1Yi1tZW51IHtcbiAgZGlzcGxheTogbm9uZTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBiYWNrZ3JvdW5kOiAjRUZGN0ZDO1xuICB3aWR0aDogMjI2cHg7XG4gIGxlZnQ6IC0zMnB4O1xuICB0b3A6IDU2cHg7XG4gIHBhZGRpbmc6IDEycHggMTRweCAyMHB4IDE2cHg7XG4gIGJvcmRlci10b3A6IDFweCBzb2xpZCAjQzhENERDO1xuICBib3JkZXItcmFkaXVzOiAwIDAgNnB4IDZweDtcbn1cblxuLmhlYWRlcl9fc3ViLW1lbnUtaXRlbSB7XG4gIHBhZGRpbmc6IDdweCAwIDhweCAxNHB4O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0M4RDREQztcbiAgbGluZS1oZWlnaHQ6IDIxeHB4O1xufVxuXG4uaGVhZGVyX19zdWItbWVudS1pdGVtOmxhc3QtY2hpbGQge1xuICBib3JkZXItYm90dG9tOiAwcHg7XG59XG5cbi5oZWFkZXJfX3N1Yi1tZW51IGEge1xuICBmb250OiA0MDAgMTZweCBcIlB0c2Fuc1wiO1xuICBjb2xvcjogIzQwNDU0MTtcbn1cblxuLmhlYWRlcl9fbGVmdC1zaWRlIHtcbiAgZGlzcGxheTogLXdlYmtpdC1ib3g7XG4gIGRpc3BsYXk6IC1tcy1mbGV4Ym94O1xuICBkaXNwbGF5OiBmbGV4O1xufVxuXG4uaGVhZGVyX19uYW1lIHtcbiAgcGFkZGluZy10b3A6IDE3cHg7XG59XG5cbi5oZWFkZXJfX25hbWUtdG9wIHtcbiAgZm9udDogNzAwIDE2cHgvMjFweCBcIlB0c2Fuc1wiO1xuICBjb2xvcjogIzQwNDU0MTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgcGFkZGluZy1sZWZ0OiA0cHg7XG59XG5cbi5oZWFkZXJfX25hbWUtc3ViIHtcbiAgZm9udDogNDAwIDI0cHgvMjRweCBcIkludHJvXCI7XG4gIHBhZGRpbmctdG9wOiA0cHg7XG4gIGNvbG9yOiAjMTY4YjVhO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xufVxuXG4uaGVhZGVyX19tZW51IHtcbiAgZm9udDogNDAwIDE2cHgvMjFweCBcIlB0c2Fuc1wiO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LXBhY2s6IGp1c3RpZnk7XG4gIC1tcy1mbGV4LXBhY2s6IGp1c3RpZnk7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgaGVpZ2h0OiAxMDFweDtcbiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjtcbiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWxlZnQ6IDcxcHg7XG59XG5cbi5oZWFkZXJfX21lbnUgYSB7XG4gIGNvbG9yOiAjNDA0NTQxO1xufVxuXG4uaGVhZGVyX19tZW51LWl0ZW0ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIG1hcmdpbi1sZWZ0OiA3MXB4O1xuICBjdXJzb3I6IHBvaW50ZXI7XG59XG5cbi5oZWFkZXJfX21lbnUtaXRlbTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwMCU7XG4gIGxlZnQ6IC0zMHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIHdpZHRoOiAyMjZweDtcbn1cblxuLmhlYWRlcl9fbWVudS1pdGVtOmZpcnN0LWNoaWxkIHtcbiAgbWFyZ2luLWxlZnQ6IDA7XG59XG5cbi5oZWFkZXJfX21lbnUtaXRlbTpsYXN0LWNoaWxkIHtcbiAgbWFyZ2luLWxlZnQ6IDU1cHg7XG59XG5cbi5oZWFkZXJfX21lbnUtaXRlbTpob3ZlciBpbWcge1xuICAtd2Via2l0LXRyYW5zZm9ybTogcm90YXRlKDE4MGRlZyk7XG4gIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuXG4uaGVhZGVyX19tZW51LWl0ZW06aG92ZXIgLmhlYWRlcl9fc3ViLW1lbnUge1xuICBkaXNwbGF5OiBibG9jaztcbn1cblxuLmhlYWRlcl9fbWVudS1pdGVtIGltZyB7XG4gIGhlaWdodDogMTJweDtcbiAgd2lkdGg6IDEycHg7XG4gIG1hcmdpbi1sZWZ0OiA4cHg7XG4gIGZpbGw6ICM0MDQ1NDE7XG59XG5cbi5oZWFkZXJfX3NvY2lhbCB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBtYXJnaW4tYm90dG9tOiA2cHg7XG59XG5cbi5oZWFkZXJfX3NvY2lhbC1pdGVtIHtcbiAgd2lkdGg6IDIwcHg7XG4gIGhlaWdodDogMjBweDtcbn1cblxuLmhlYWRlcl9fc29jaWFsLWl0ZW06aG92ZXIge1xuICBmaWxsOiAjNDA0NTQxO1xufVxuXG4uaGVhZGVyX19yaWdodC1zaWRlIHtcbiAgbWFyZ2luLWxlZnQ6IDIxMXB4O1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIHdpZHRoOiAzMTFweDtcbiAgaGVpZ2h0OiAxMDFweDtcbiAgLXdlYmtpdC1ib3gtcGFjazoganVzdGlmeTtcbiAgLW1zLWZsZXgtcGFjazoganVzdGlmeTtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBwYWRkaW5nLXRvcDogNnB4O1xuICBqdXN0aWZ5LWl0ZW1zOiBlbmQ7XG59XG5cbi5oZWFkZXJfX2NvbnRhY3Qge1xuICB3aWR0aDogMjQ0cHg7XG59XG5cbi5oZWFkZXJfX3NlYXJjaCB7XG4gIGJhY2tncm91bmQ6IHVybChcIi4uL2ltZy9zZWFyY2gvc2VhcmNoLnN2Z1wiKSBuby1yZXBlYXQgY2VudGVyO1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICBib3JkZXI6IDJweCBzb2xpZCAjOGE4ZTkwO1xuICB3aWR0aDogMjRweDtcbiAgaGVpZ2h0OiAyNHB4O1xufVxuXG4uaGVhZGVyX19zZWFyY2g6Zm9jdXMsXG4uaGVhZGVyX19zZWFyY2g6YWN0aXZlIHtcbiAgYmFja2dyb3VuZC1wb3NpdGlvbjogMTAxJSBjZW50ZXI7XG4gIHdpZHRoOiAyMDBweDtcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcbiAgbWFyZ2luLWxlZnQ6IC0xNzZweDtcbn1cblxuLmhlYWRlcl9fbWVzc2FnZSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbiAgaGVpZ2h0OiAyOXB4O1xuICAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyO1xuICAtbXMtZmxleC1hbGlnbjogY2VudGVyO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAtd2Via2l0LWJveC1wYWNrOiBqdXN0aWZ5O1xuICAtbXMtZmxleC1wYWNrOiBqdXN0aWZ5O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG59XG5cbi5oZWFkZXJfX21lc3NhZ2UtaXRlbSB7XG4gIGRpc3BsYXk6IC13ZWJraXQtYm94O1xuICBkaXNwbGF5OiAtbXMtZmxleGJveDtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuLmhlYWRlcl9fbWVzc2FnZS1pdGVtIGltZyB7XG4gIHdpZHRoOiAyNHB4O1xuICBtYXJnaW4tcmlnaHQ6IDhweDtcbn1cblxuLmhlYWRlcl9fbWVzc2FnZS1pdGVtIGEge1xuICBmb250OiA0MDAgMThweCBcIlB0c2Fuc1wiO1xuICBkaXNwbGF5OiAtd2Via2l0LWJveDtcbiAgZGlzcGxheTogLW1zLWZsZXhib3g7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7XG4gIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGNvbG9yOiAjNDA0NTQxO1xufVxyXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsZXlKMlpYSnphVzl1SWpvekxDSnpiM1Z5WTJWeklqcGJJbTFoYVc0dWMyRnpjeUlzSW0xaGFXNHVZM056SWl3aWNtVnpaWFF1YzJOemN5SXNJbVp2Ym5SekxuTmpjM01pTENKcGJtTnNkV1JsY3k5amIyNTBZV2x1WlhJdlkyOXVkR0ZwYm1WeUxuTmhjM01pTENKcGJtTnNkV1JsY3k5b1pXRmtaWEl2YUdWaFpHVnlMbk5oYzNNaUxDSmpiMnh2Y2k1ellYTnpJbDBzSW01aGJXVnpJanBiWFN3aWJXRndjR2x1WjNNaU9pSkJRVUZCTzBWQlEwa3NPRUpCUVVFN1ZVRkJRU3h6UWtGQlFUdEJRME5LT3p0QlJFRkJPMFZCUTBrc1YwRkJRVHRGUVVOQkxGbEJRVUU3UVVOSFNqczdRVVJHUVR0RlFVTkpMRk5CUVVFN1JVRkRRU3hWUVVGQk8wVkJRMEVzVDBGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc2NVSkJRVUU3UVVOTFNqczdRVU5tUVRzN096czdPenM3TzBWQlUwTXNVMEZCUVR0RlFVTkJMRlZCUVVFN1JVRkRRU3hUUVVGQk8wVkJRMEVzVlVGQlFUdEZRVU5CTEdWQlFVRTdSVUZEUVN4M1FrRkJRVHRGUVVOQkxIVkNRVUZCTzBGRWEwSkVPenRCUTJoQ1FUdEZRVU5ETEdOQlFVRTdRVVJ0UWtRN08wRkRha0pCTzBWQlEwTXNaMEpCUVVFN1FVUnZRa1E3TzBGRGJFSkJPMFZCUTBNc1dVRkJRVHRCUkhGQ1JEczdRVU51UWtFN08wVkJSVU1zVjBGQlFUdEZRVU5CTEdGQlFVRTdRVVJ6UWtRN08wRkRia0pCTEhGRFFVRkJPMEZCUTBFN1JVRkRReXhWUVVGQk8wRkVjMEpFT3p0QlEyNUNRU3d5UTBGQlFUdEJRVU5CTzBWQlEwTXNjVUpCUVVFN1FVUnpRa1E3TzBGRGNFSkJPMFZCUTBNc05rSkJRVUU3UVVSMVFrUTdPMEZEY0VKQkxITkVRVUZCTzBGQlEwRTdSVUZEUXl4NVFrRkJRVHRGUVVOQkxHbENRVUZCTzBGRWRVSkVPenRCUlhaRlFUdEZRVU5KTEc5Q1FVRkJPMFZCUTBFc2RVUkJRVUU3UlVGRFFTeHJRa0ZCUVR0RlFVTkJMR2RDUVVGQk8wRkdNRVZLTzBGRmVFVkJPMFZCUTBrc2NVSkJRVUU3UlVGRFFTdzRSRUZCUVR0RlFVTkJMR3RDUVVGQk8wVkJRMEVzWjBKQlFVRTdRVVl3UlVvN1FVVjRSVUU3UlVGRFNTeHhRa0ZCUVR0RlFVTkJMR2xGUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4blFrRkJRVHRCUmpCRlNqdEJSekZHUVR0RlFVTkpMR0ZCUVVFN1JVRkRRU3hqUVVGQk8wRklORVpLT3p0QlNUbEdRVHRGUVVOSkxHRkJRVUU3UVVwcFIwbzdRVWt2UmtrN1JVRkRTU3h2UWtGQlFUdEZRVUZCTEc5Q1FVRkJPMFZCUVVFc1lVRkJRVHRCU21sSFVqdEJTV2hIU1R0RlFVTkpMR0ZCUVVFN1FVcHJSMUk3UVVscVIwazdSVUZEU1N4aFFVRkJPMFZCUTBFc2EwSkJRVUU3UlVGRFFTeHRRa0ZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3hYUVVGQk8wVkJRMEVzVTBGQlFUdEZRVU5CTERSQ1FVRkJPMFZCUTBFc05rSkJRVUU3UlVGRFFTd3dRa0ZCUVR0QlNtMUhVanRCU1d4SFVUdEZRVU5KTEhWQ1FVRkJPMFZCUTBFc1owTkJRVUU3UlVGRFFTeHJRa0ZCUVR0QlNtOUhXanRCU1c1SFdUdEZRVU5KTEd0Q1FVRkJPMEZLY1Vkb1FqdEJTWEJIVVR0RlFVTkpMR1ZCUVVFN1JVRkRRU3h4UWtGQlFUdEZRVU5CTEdkQ1FVRkJPMFZCUTBFc1kwTXhRa283UVV4blNWSTdRVWx1UjBrN1JVRkRTU3h2UWtGQlFUdEZRVUZCTEc5Q1FVRkJPMFZCUVVFc1lVRkJRVHRCU25GSFVqdEJTWEJIU1R0RlFVTkpMR2xDUVVGQk8wRktjMGRTTzBGSmNrZFJPMFZCUTBrc2NVSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3hwUWtGQlFUdEZRVU5CTEdORGRFTktPMFZFZFVOSkxIbENRVUZCTzBWQlEwRXNhVUpCUVVFN1FVcDFSMW83UVVsMFIxRTdSVUZEU1N4blFrRkJRVHRGUVVOQkxHOUNRVUZCTzBWQlEwRXNZME0zUTBvN1JVUTRRMGtzZVVKQlFVRTdSVUZEUVN4bFFVRkJPMFZCUTBFc2FVSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0QlNuZEhXanRCU1haSFNUdEZRVU5KTEc5Q1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGQlFTeGhRVUZCTzBWQlEwRXNlVUpCUVVFN1RVRkJRU3h6UWtGQlFUdFZRVUZCTERoQ1FVRkJPMFZCUTBFc2NVSkJRVUU3UlVGRFFTeG5Ra0ZCUVR0RlFVTkJMR1ZCUVVFN1JVRkRRU3hoUVVGQk8wVkJRMEVzZVVKQlFVRTdUVUZCUVN4elFrRkJRVHRWUVVGQkxHMUNRVUZCTzBWQlEwRXNhVUpCUVVFN1JVRkRRU3hwUWtGQlFUdEJTbmxIVWp0QlNYaEhVVHRGUVVOSkxHTkROVVJLTzBGTWMwdFNPMEZKZWtkUk8wVkJRMGtzYTBKQlFVRTdSVUZEUVN4cFFrRkJRVHRGUVVOQkxHVkJRVUU3UVVveVIxbzdRVWt4UjFrN1JVRkRTU3hYUVVGQk8wVkJRMEVzYTBKQlFVRTdSVUZEUVN4VFFVRkJPMFZCUTBFc1YwRkJRVHRGUVVOQkxGbEJRVUU3UlVGRFFTeFpRVUZCTzBGS05FZG9RanRCU1RGSFdUdEZRVU5KTEdOQlFVRTdRVW8wUjJoQ08wRkpNMGRaTzBWQlEwa3NhVUpCUVVFN1FVbzJSMmhDTzBGSk0wZG5RanRGUVVOSkxHbERRVUZCTzAxQlFVRXNOa0pCUVVFN1ZVRkJRU3g1UWtGQlFUdEJTalpIY0VJN1FVazFSMmRDTzBWQlEwa3NZMEZCUVR0QlNqaEhjRUk3UVVrM1IxazdSVUZEU1N4WlFVRkJPMFZCUTBFc1YwRkJRVHRGUVVOQkxHZENRVUZCTzBWQlEwRXNZVU4wUmxJN1FVeHhUVkk3UVVrNVIwazdSVUZEU1N4dlFrRkJRVHRGUVVGQkxHOUNRVUZCTzBWQlFVRXNZVUZCUVR0RlFVTkJMSGxDUVVGQk8wMUJRVUVzYzBKQlFVRTdWVUZCUVN3NFFrRkJRVHRGUVVOQkxHdENRVUZCTzBGS1owaFNPMEZKTDBkUk8wVkJRMGtzVjBGQlFUdEZRVU5CTEZsQlFVRTdRVXBwU0ZvN1FVbG9TRms3UlVGRFNTeGhReTlHVWp0QlRHbE9VanRCU1dwSVNUdEZRVU5KTEd0Q1FVRkJPMFZCUTBFc2IwSkJRVUU3UlVGQlFTeHZRa0ZCUVR0RlFVRkJMR0ZCUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzWVVGQlFUdEZRVU5CTEhsQ1FVRkJPMDFCUVVFc2MwSkJRVUU3VlVGQlFTdzRRa0ZCUVR0RlFVTkJMR2RDUVVGQk8wVkJRMEVzYTBKQlFVRTdRVXB0U0ZJN1FVbHNTRWs3UlVGRFNTeFpRVUZCTzBGS2IwaFNPMEZKYmtoSk8wVkJRMGtzWjBKQlFVRTdSVUZEUVN4dFFrRkJRVHRGUVVOQkxIbENRVUZCTzBWQlEwRXNWMEZCUVR0RlFVTkJMRmxCUVVFN1JVRkRRU3d5UkVGQlFUdEZRVU5CTERKQ1FVRkJPMEZLY1VoU08wRkpia2hSTzBWQlEwa3NaME5CUVVFN1JVRkRRU3haUVVGQk8wVkJRMEVzYlVKQlFVRTdSVUZEUVN4dFFrRkJRVHRCU25GSVdqdEJTVzVJU1R0RlFVTkpMRzlDUVVGQk8wVkJRVUVzYjBKQlFVRTdSVUZCUVN4aFFVRkJPMFZCUTBFc1dVRkJRVHRGUVVOQkxIbENRVUZCTzAxQlFVRXNjMEpCUVVFN1ZVRkJRU3h0UWtGQlFUdEZRVU5CTEhsQ1FVRkJPMDFCUVVFc2MwSkJRVUU3VlVGQlFTdzRRa0ZCUVR0QlNuRklVanRCU1hCSVVUdEZRVU5KTEc5Q1FVRkJPMFZCUVVFc2IwSkJRVUU3UlVGQlFTeGhRVUZCTzBGS2MwaGFPMEZKY2toWk8wVkJRMGtzVjBGQlFUdEZRVU5CTEdsQ1FVRkJPMEZLZFVob1FqdEJTWFJJV1R0RlFVTkpMSEZDUVVGQk8wVkJRMEVzWjBKQlFVRTdSVUZEUVN4dlFrRkJRVHRGUVVGQkxHOUNRVUZCTzBWQlFVRXNZVUZCUVR0RlFVTkJMSGxDUVVGQk8wMUJRVUVzYzBKQlFVRTdWVUZCUVN4dFFrRkJRVHRGUVVOQkxHVkJRVUU3UlVGRFFTeGpRM3BKVWp0QlRHbFJVaUlzSW1acGJHVWlPaUp0WVdsdUxtTnpjeUlzSW5OdmRYSmpaWE5EYjI1MFpXNTBJanBiSW1KdlpIbGNjbHh1SUNBZ0lHSnZlQzF6YVhwcGJtYzZJR0p2Y21SbGNpMWliM2hjY2x4dWFXMW5YSEpjYmlBZ0lDQjNhV1IwYURvZ01UQXdKVnh5WEc0Z0lDQWdhR1ZwWjJoME9pQXhNREFsWEhKY2JuVnNMQ0JzYVN3Z1lWeHlYRzRnSUNBZ2JXRnlaMmx1T2lBd1hISmNiaUFnSUNCd1lXUmthVzVuT2lBd0lDQmNjbHh1SUNBZ0lHeGxablE2SURCY2NseHVJQ0FnSUd4cGMzUXRjM1I1YkdVNklHNXZibVZjY2x4dUlDQWdJSFJsZUhRdFpHVmpiM0poZEdsdmJqb2dibTl1WlZ4eVhHNWNjbHh1UUdsdGNHOXlkQ0JjSW5KbGMyVjBMbk5qYzNOY0lseHlYRzVBYVcxd2IzSjBJRndpWm05dWRITXVjMk56YzF3aVhISmNia0JwYlhCdmNuUWdYQ0pqYjJ4dmNpNXpZWE56WENKY2NseHVRR2x0Y0c5eWRDQmNJbWx1WTJ4MVpHVnpMMk52Ym5SaGFXNWxjaTlqYjI1MFlXbHVaWEl1YzJGemMxd2lYRzVBYVcxd2IzSjBJRndpYVc1amJIVmtaWE12YUdWaFpHVnlMMmhsWVdSbGNpNXpZWE56WENKY2NseHVJaXdpWW05a2VTQjdYRzRnSUdKdmVDMXphWHBwYm1jNklHSnZjbVJsY2kxaWIzZzdYRzU5WEc1Y2JtbHRaeUI3WEc0Z0lIZHBaSFJvT2lBeE1EQWxPMXh1SUNCb1pXbG5hSFE2SURFd01DVTdYRzU5WEc1Y2JuVnNMQ0JzYVN3Z1lTQjdYRzRnSUcxaGNtZHBiam9nTUR0Y2JpQWdjR0ZrWkdsdVp6b2dNRHRjYmlBZ2JHVm1kRG9nTUR0Y2JpQWdiR2x6ZEMxemRIbHNaVG9nYm05dVpUdGNiaUFnZEdWNGRDMWtaV052Y21GMGFXOXVPaUJ1YjI1bE8xeHVmVnh1WEc1b2RHMXNMQ0JpYjJSNUxDQmthWFlzSUhOd1lXNHNJR0Z3Y0d4bGRDd2diMkpxWldOMExDQnBabkpoYldVc1hHNW9NU3dnYURJc0lHZ3pMQ0JvTkN3Z2FEVXNJR2cyTENCd0xDQmliRzlqYTNGMWIzUmxMQ0J3Y21Vc1hHNWhMQ0JoWW1KeUxDQmhZM0p2Ym5sdExDQmhaR1J5WlhOekxDQmlhV2NzSUdOcGRHVXNJR052WkdVc1hHNWtaV3dzSUdSbWJpd2daVzBzSUdadmJuUXNJR2x0Wnl3Z2FXNXpMQ0JyWW1Rc0lIRXNJSE1zSUhOaGJYQXNYRzV6YldGc2JDd2djM1J5YVd0bExDQnpkSEp2Ym1jc0lITjFZaXdnYzNWd0xDQjBkQ3dnZG1GeUxGeHVZaXdnZFN3Z2FTd2dZMlZ1ZEdWeUxGeHVaR3dzSUdSMExDQmtaQ3dnYjJ3c0lIVnNMQ0JzYVN4Y2JtWnBaV3hrYzJWMExDQm1iM0p0TENCc1lXSmxiQ3dnYkdWblpXNWtMRnh1ZEdGaWJHVXNJR05oY0hScGIyNHNJSFJpYjJSNUxDQjBabTl2ZEN3Z2RHaGxZV1FzSUhSeUxDQjBhQ3dnZEdRZ2UxeHVJQ0J0WVhKbmFXNDZJREE3WEc0Z0lIQmhaR1JwYm1jNklEQTdYRzRnSUdKdmNtUmxjam9nTUR0Y2JpQWdiM1YwYkdsdVpUb2dNRHRjYmlBZ1ptOXVkQzF6YVhwbE9pQXhNREFsTzF4dUlDQjJaWEowYVdOaGJDMWhiR2xuYmpvZ1ltRnpaV3hwYm1VN1hHNGdJR0poWTJ0bmNtOTFibVE2SUhSeVlXNXpjR0Z5Wlc1ME8xeHVmVnh1WEc1aWIyUjVJSHRjYmlBZ2JHbHVaUzFvWldsbmFIUTZJREU3WEc1OVhHNWNibTlzTENCMWJDQjdYRzRnSUd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEc1OVhHNWNibUpzYjJOcmNYVnZkR1VzSUhFZ2UxeHVJQ0J4ZFc5MFpYTTZJRzV2Ym1VN1hHNTlYRzVjYm1Kc2IyTnJjWFZ2ZEdVNlltVm1iM0psTENCaWJHOWphM0YxYjNSbE9tRm1kR1Z5TEZ4dWNUcGlaV1p2Y21Vc0lIRTZZV1owWlhJZ2UxeHVJQ0JqYjI1MFpXNTBPaUJjSWx3aU8xeHVJQ0JqYjI1MFpXNTBPaUJ1YjI1bE8xeHVmVnh1WEc0dktpQnlaVzFsYldKbGNpQjBieUJrWldacGJtVWdabTlqZFhNZ2MzUjViR1Z6SVNBcUwxeHVPbVp2WTNWeklIdGNiaUFnYjNWMGJHbHVaVG9nTUR0Y2JuMWNibHh1THlvZ2NtVnRaVzFpWlhJZ2RHOGdhR2xuYUd4cFoyaDBJR2x1YzJWeWRITWdjMjl0WldodmR5RWdLaTljYm1sdWN5QjdYRzRnSUhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYm05dVpUdGNibjFjYmx4dVpHVnNJSHRjYmlBZ2RHVjRkQzFrWldOdmNtRjBhVzl1T2lCc2FXNWxMWFJvY205MVoyZzdYRzU5WEc1Y2JpOHFJSFJoWW14bGN5QnpkR2xzYkNCdVpXVmtJQ2RqWld4c2MzQmhZMmx1WnoxY0lqQmNJaWNnYVc0Z2RHaGxJRzFoY210MWNDQXFMMXh1ZEdGaWJHVWdlMXh1SUNCaWIzSmtaWEl0WTI5c2JHRndjMlU2SUdOdmJHeGhjSE5sTzF4dUlDQmliM0prWlhJdGMzQmhZMmx1WnpvZ01EdGNibjFjYmx4dVFHWnZiblF0Wm1GalpTQjdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQmNJa2x1ZEhKdlhDSTdYRzRnSUhOeVl6b2dkWEpzS0Z3aUxpNHZabTl1ZEhNdmFXNTBjbTh2YVc1MGNtOHViM1JtWENJcElHWnZjbTFoZENoY0luUnlkV1YwZVhCbFhDSXBPMXh1SUNCbWIyNTBMWE4wZVd4bE9pQnViM0p0WVd3N1hHNGdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQTdYRzU5WEc1QVptOXVkQzFtWVdObElIdGNiaUFnWm05dWRDMW1ZVzFwYkhrNklGd2lVSFJ6WVc1elhDSTdYRzRnSUhOeVl6b2dkWEpzS0Z3aUxpNHZabTl1ZEhNdmNIUnpZVzV6TDFCVVUyRnVjeTFDYjJ4a0xuUjBabHdpS1NCbWIzSnRZWFFvWENKMGNuVmxkSGx3WlZ3aUtUdGNiaUFnWm05dWRDMXpkSGxzWlRvZ2JtOXliV0ZzTzF4dUlDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd08xeHVmVnh1UUdadmJuUXRabUZqWlNCN1hHNGdJR1p2Ym5RdFptRnRhV3g1T2lCY0lsQjBjMkZ1YzF3aU8xeHVJQ0J6Y21NNklIVnliQ2hjSWk0dUwyWnZiblJ6TDNCMGMyRnVjeTlRVkZOaGJuTXRVbVZuZFd4aGNpNTBkR1pjSWlrZ1ptOXliV0YwS0Z3aWRISjFaWFI1Y0dWY0lpazdYRzRnSUdadmJuUXRjM1I1YkdVNklHNXZjbTFoYkR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNibjFjYmk1amIyNTBZV2x1WlhJZ2UxeHVJQ0IzYVdSMGFEb2dNVGN4TUhCNE8xeHVJQ0J0WVhKbmFXNDZJREFnWVhWMGJ6dGNibjFjYmx4dUxtaGxZV1JsY2lCN1hHNGdJR2hsYVdkb2REb2dNVEF4Y0hnN1hHNTlYRzR1YUdWaFpHVnlYMTlqYjI1MFlXbHVaWElnZTF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dWZWeHVMbWhsWVdSbGNsOWZiRzluYnlCN1hHNGdJR2hsYVdkb2REb2dNVEF4Y0hnN1hHNTlYRzR1YUdWaFpHVnlYMTl6ZFdJdGJXVnVkU0I3WEc0Z0lHUnBjM0JzWVhrNklHNXZibVU3WEc0Z0lIQnZjMmwwYVc5dU9pQmhZbk52YkhWMFpUdGNiaUFnWW1GamEyZHliM1Z1WkRvZ0kwVkdSamRHUXp0Y2JpQWdkMmxrZEdnNklESXlObkI0TzF4dUlDQnNaV1owT2lBdE16SndlRHRjYmlBZ2RHOXdPaUExTm5CNE8xeHVJQ0J3WVdSa2FXNW5PaUF4TW5CNElERTBjSGdnTWpCd2VDQXhObkI0TzF4dUlDQmliM0prWlhJdGRHOXdPaUF4Y0hnZ2MyOXNhV1FnSTBNNFJEUkVRenRjYmlBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTUNBd0lEWndlQ0EyY0hnN1hHNTlYRzR1YUdWaFpHVnlYMTl6ZFdJdGJXVnVkUzFwZEdWdElIdGNiaUFnY0dGa1pHbHVaem9nTjNCNElEQWdPSEI0SURFMGNIZzdYRzRnSUdKdmNtUmxjaTFpYjNSMGIyMDZJREZ3ZUNCemIyeHBaQ0FqUXpoRU5FUkRPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNakY0Y0hnN1hHNTlYRzR1YUdWaFpHVnlYMTl6ZFdJdGJXVnVkUzFwZEdWdE9teGhjM1F0WTJocGJHUWdlMXh1SUNCaWIzSmtaWEl0WW05MGRHOXRPaUF3Y0hnN1hHNTlYRzR1YUdWaFpHVnlYMTl6ZFdJdGJXVnVkU0JoSUh0Y2JpQWdabTl1ZEMxemFYcGxPaUF4Tm5CNE8xeHVJQ0JtYjI1MExXWmhiV2xzZVRvZ1hDSlFkSE5oYm5OY0lqdGNiaUFnWm05dWRDMTNaV2xuYUhRNklEUXdNRHRjYmlBZ1kyOXNiM0k2SUNNME1EUTFOREU3WEc1OVhHNHVhR1ZoWkdWeVgxOXNaV1owTFhOcFpHVWdlMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1ZlZ4dUxtaGxZV1JsY2w5ZmJtRnRaU0I3WEc0Z0lIQmhaR1JwYm1jdGRHOXdPaUF4TjNCNE8xeHVmVnh1TG1obFlXUmxjbDlmYm1GdFpTMTBiM0FnZTF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nWENKUWRITmhibk5jSWp0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURjd01EdGNiaUFnWm05dWRDMXphWHBsT2lBeE5uQjRPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNakZ3ZUR0Y2JpQWdZMjlzYjNJNklDTTBNRFExTkRFN1hHNGdJSFJsZUhRdGRISmhibk5tYjNKdE9pQjFjSEJsY21OaGMyVTdYRzRnSUhCaFpHUnBibWN0YkdWbWREb2dOSEI0TzF4dWZWeHVMbWhsWVdSbGNsOWZibUZ0WlMxemRXSWdlMXh1SUNCd1lXUmthVzVuTFhSdmNEb2dOSEI0TzF4dUlDQm1iMjUwTFdaaGJXbHNlVG9nWENKSmJuUnliMXdpTzF4dUlDQmpiMnh2Y2pvZ0l6RTJPR0kxWVR0Y2JpQWdkR1Y0ZEMxMGNtRnVjMlp2Y20wNklIVndjR1Z5WTJGelpUdGNiaUFnWm05dWRDMXphWHBsT2lBeU5IQjRPMXh1SUNCc2FXNWxMV2hsYVdkb2REb2dNalJ3ZUR0Y2JpQWdabTl1ZEMxM1pXbG5hSFE2SURRd01EdGNibjFjYmk1b1pXRmtaWEpmWDIxbGJuVWdlMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1SUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYRzRnSUdadmJuUXRabUZ0YVd4NU9pQmNJbEIwYzJGdWMxd2lPMXh1SUNCbWIyNTBMWGRsYVdkb2REb2dOREF3TzF4dUlDQm1iMjUwTFhOcGVtVTZJREUyY0hnN1hHNGdJR2hsYVdkb2REb2dNVEF4Y0hnN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lHeHBibVV0YUdWcFoyaDBPaUF5TVhCNE8xeHVJQ0J0WVhKbmFXNHRiR1ZtZERvZ056RndlRHRjYm4xY2JpNW9aV0ZrWlhKZlgyMWxiblVnWVNCN1hHNGdJR052Ykc5eU9pQWpOREEwTlRReE8xeHVmVnh1TG1obFlXUmxjbDlmYldWdWRTMXBkR1Z0SUh0Y2JpQWdjRzl6YVhScGIyNDZJSEpsYkdGMGFYWmxPMXh1SUNCdFlYSm5hVzR0YkdWbWREb2dOekZ3ZUR0Y2JpQWdZM1Z5YzI5eU9pQndiMmx1ZEdWeU8xeHVmVnh1TG1obFlXUmxjbDlmYldWdWRTMXBkR1Z0T2pwaVpXWnZjbVVnZTF4dUlDQmpiMjUwWlc1ME9pQmNJbHdpTzF4dUlDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVTdYRzRnSUhSdmNEb2dNVEF3SlR0Y2JpQWdiR1ZtZERvZ0xUTXdjSGc3WEc0Z0lHaGxhV2RvZERvZ05EQndlRHRjYmlBZ2QybGtkR2c2SURJeU5uQjRPMXh1ZlZ4dUxtaGxZV1JsY2w5ZmJXVnVkUzFwZEdWdE9tWnBjbk4wTFdOb2FXeGtJSHRjYmlBZ2JXRnlaMmx1TFd4bFpuUTZJREE3WEc1OVhHNHVhR1ZoWkdWeVgxOXRaVzUxTFdsMFpXMDZiR0Z6ZEMxamFHbHNaQ0I3WEc0Z0lHMWhjbWRwYmkxc1pXWjBPaUExTlhCNE8xeHVmVnh1TG1obFlXUmxjbDlmYldWdWRTMXBkR1Z0T21odmRtVnlJR2x0WnlCN1hHNGdJSFJ5WVc1elptOXliVG9nY205MFlYUmxLREU0TUdSbFp5azdYRzU5WEc0dWFHVmhaR1Z5WDE5dFpXNTFMV2wwWlcwNmFHOTJaWElnTG1obFlXUmxjbDlmYzNWaUxXMWxiblVnZTF4dUlDQmthWE53YkdGNU9pQmliRzlqYXp0Y2JuMWNiaTVvWldGa1pYSmZYMjFsYm5VdGFYUmxiU0JwYldjZ2UxeHVJQ0JvWldsbmFIUTZJREV5Y0hnN1hHNGdJSGRwWkhSb09pQXhNbkI0TzF4dUlDQnRZWEpuYVc0dGJHVm1kRG9nT0hCNE8xeHVJQ0JtYVd4c09pQWpOREEwTlRReE8xeHVmVnh1TG1obFlXUmxjbDlmYzI5amFXRnNJSHRjYmlBZ1pHbHpjR3hoZVRvZ1pteGxlRHRjYmlBZ2FuVnpkR2xtZVMxamIyNTBaVzUwT2lCemNHRmpaUzFpWlhSM1pXVnVPMXh1SUNCdFlYSm5hVzR0WW05MGRHOXRPaUEyY0hnN1hHNTlYRzR1YUdWaFpHVnlYMTl6YjJOcFlXd3RhWFJsYlNCN1hHNGdJSGRwWkhSb09pQXlNSEI0TzF4dUlDQm9aV2xuYUhRNklESXdjSGc3WEc1OVhHNHVhR1ZoWkdWeVgxOXpiMk5wWVd3dGFYUmxiVHBvYjNabGNpQjdYRzRnSUdacGJHdzZJQ00wTURRMU5ERTdYRzU5WEc0dWFHVmhaR1Z5WDE5eWFXZG9kQzF6YVdSbElIdGNiaUFnYldGeVoybHVMV3hsWm5RNklESXhNWEI0TzF4dUlDQmthWE53YkdGNU9pQm1iR1Y0TzF4dUlDQjNhV1IwYURvZ016RXhjSGc3WEc0Z0lHaGxhV2RvZERvZ01UQXhjSGc3WEc0Z0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ2MzQmhZMlV0WW1WMGQyVmxianRjYmlBZ2NHRmtaR2x1WnkxMGIzQTZJRFp3ZUR0Y2JpQWdhblZ6ZEdsbWVTMXBkR1Z0Y3pvZ1pXNWtPMXh1ZlZ4dUxtaGxZV1JsY2w5ZlkyOXVkR0ZqZENCN1hHNGdJSGRwWkhSb09pQXlORFJ3ZUR0Y2JuMWNiaTVvWldGa1pYSmZYM05sWVhKamFDQjdYRzRnSUcxaGNtZHBiaTEwYjNBNklETXdjSGc3WEc0Z0lHSnZjbVJsY2kxeVlXUnBkWE02SURFd01DVTdYRzRnSUdKdmNtUmxjam9nTW5CNElITnZiR2xrSUNNNFlUaGxPVEE3WEc0Z0lIZHBaSFJvT2lBeU5IQjRPMXh1SUNCb1pXbG5hSFE2SURJMGNIZzdYRzRnSUdKaFkydG5jbTkxYm1RdGFXMWhaMlU2SUhWeWJDaGNJaTR1TDJsdFp5OXpaV0Z5WTJndmMyVmhjbU5vTG5OMloxd2lLU0J1YnkxeVpYQmxZWFE3WEc0Z0lHSmhZMnRuY205MWJtUXRjRzl6YVhScGIyNDZJR05sYm5SbGNqdGNibjFjYmk1b1pXRmtaWEpmWDNObFlYSmphRHBtYjJOMWN5d2dMbWhsWVdSbGNsOWZjMlZoY21Ob09tRmpkR2wyWlNCN1hHNGdJR0poWTJ0bmNtOTFibVF0Y0c5emFYUnBiMjQ2SURFd01TVWdZMlZ1ZEdWeU8xeHVJQ0IzYVdSMGFEb2dNakF3Y0hnN1hHNGdJR0p2Y21SbGNpMXlZV1JwZFhNNklERTFjSGc3WEc0Z0lHMWhjbWRwYmkxc1pXWjBPaUF0TVRjMmNIZzdYRzU5WEc0dWFHVmhaR1Z5WDE5dFpYTnpZV2RsSUh0Y2JpQWdaR2x6Y0d4aGVUb2dabXhsZUR0Y2JpQWdhR1ZwWjJoME9pQXlPWEI0TzF4dUlDQmhiR2xuYmkxcGRHVnRjem9nWTJWdWRHVnlPMXh1SUNCcWRYTjBhV1o1TFdOdmJuUmxiblE2SUhOd1lXTmxMV0psZEhkbFpXNDdYRzU5WEc0dWFHVmhaR1Z5WDE5dFpYTnpZV2RsTFdsMFpXMGdlMXh1SUNCa2FYTndiR0Y1T2lCbWJHVjRPMXh1ZlZ4dUxtaGxZV1JsY2w5ZmJXVnpjMkZuWlMxcGRHVnRJR2x0WnlCN1hHNGdJSGRwWkhSb09pQXlOSEI0TzF4dUlDQnRZWEpuYVc0dGNtbG5hSFE2SURod2VEdGNibjFjYmk1b1pXRmtaWEpmWDIxbGMzTmhaMlV0YVhSbGJTQmhJSHRjYmlBZ1ptOXVkQzFtWVcxcGJIazZJRndpVUhSellXNXpYQ0k3WEc0Z0lHWnZiblF0ZDJWcFoyaDBPaUEwTURBN1hHNGdJR1JwYzNCc1lYazZJR1pzWlhnN1hHNGdJR0ZzYVdkdUxXbDBaVzF6T2lCalpXNTBaWEk3WEc0Z0lHWnZiblF0YzJsNlpUb2dNVGh3ZUR0Y2JpQWdZMjlzYjNJNklDTTBNRFExTkRFN1hHNTlJaXdpYUhSdGJDd2dZbTlrZVN3Z1pHbDJMQ0J6Y0dGdUxDQmhjSEJzWlhRc0lHOWlhbVZqZEN3Z2FXWnlZVzFsTEZ4eVhHNW9NU3dnYURJc0lHZ3pMQ0JvTkN3Z2FEVXNJR2cyTENCd0xDQmliRzlqYTNGMWIzUmxMQ0J3Y21Vc1hISmNibUVzSUdGaVluSXNJR0ZqY205dWVXMHNJR0ZrWkhKbGMzTXNJR0pwWnl3Z1kybDBaU3dnWTI5a1pTeGNjbHh1WkdWc0xDQmtabTRzSUdWdExDQm1iMjUwTENCcGJXY3NJR2x1Y3l3Z2EySmtMQ0J4TENCekxDQnpZVzF3TEZ4eVhHNXpiV0ZzYkN3Z2MzUnlhV3RsTENCemRISnZibWNzSUhOMVlpd2djM1Z3TENCMGRDd2dkbUZ5TEZ4eVhHNWlMQ0IxTENCcExDQmpaVzUwWlhJc1hISmNibVJzTENCa2RDd2daR1FzSUc5c0xDQjFiQ3dnYkdrc1hISmNibVpwWld4a2MyVjBMQ0JtYjNKdExDQnNZV0psYkN3Z2JHVm5aVzVrTEZ4eVhHNTBZV0pzWlN3Z1kyRndkR2x2Yml3Z2RHSnZaSGtzSUhSbWIyOTBMQ0IwYUdWaFpDd2dkSElzSUhSb0xDQjBaQ0I3WEhKY2JseDBiV0Z5WjJsdU9pQXdPMXh5WEc1Y2RIQmhaR1JwYm1jNklEQTdYSEpjYmx4MFltOXlaR1Z5T2lBd08xeHlYRzVjZEc5MWRHeHBibVU2SURBN1hISmNibHgwWm05dWRDMXphWHBsT2lBeE1EQWxPMXh5WEc1Y2RIWmxjblJwWTJGc0xXRnNhV2R1T2lCaVlYTmxiR2x1WlR0Y2NseHVYSFJpWVdOclozSnZkVzVrT2lCMGNtRnVjM0JoY21WdWREdGNjbHh1ZlZ4eVhHNWliMlI1SUh0Y2NseHVYSFJzYVc1bExXaGxhV2RvZERvZ01UdGNjbHh1ZlZ4eVhHNXZiQ3dnZFd3Z2UxeHlYRzVjZEd4cGMzUXRjM1I1YkdVNklHNXZibVU3WEhKY2JuMWNjbHh1WW14dlkydHhkVzkwWlN3Z2NTQjdYSEpjYmx4MGNYVnZkR1Z6T2lCdWIyNWxPMXh5WEc1OVhISmNibUpzYjJOcmNYVnZkR1U2WW1WbWIzSmxMQ0JpYkc5amEzRjFiM1JsT21GbWRHVnlMRnh5WEc1eE9tSmxabTl5WlN3Z2NUcGhablJsY2lCN1hISmNibHgwWTI5dWRHVnVkRG9nSnljN1hISmNibHgwWTI5dWRHVnVkRG9nYm05dVpUdGNjbHh1ZlZ4eVhHNWNjbHh1THlvZ2NtVnRaVzFpWlhJZ2RHOGdaR1ZtYVc1bElHWnZZM1Z6SUhOMGVXeGxjeUVnS2k5Y2NseHVPbVp2WTNWeklIdGNjbHh1WEhSdmRYUnNhVzVsT2lBd08xeHlYRzU5WEhKY2JseHlYRzR2S2lCeVpXMWxiV0psY2lCMGJ5Qm9hV2RvYkdsbmFIUWdhVzV6WlhKMGN5QnpiMjFsYUc5M0lTQXFMMXh5WEc1cGJuTWdlMXh5WEc1Y2RIUmxlSFF0WkdWamIzSmhkR2x2YmpvZ2JtOXVaVHRjY2x4dWZWeHlYRzVrWld3Z2UxeHlYRzVjZEhSbGVIUXRaR1ZqYjNKaGRHbHZiam9nYkdsdVpTMTBhSEp2ZFdkb08xeHlYRzU5WEhKY2JseHlYRzR2S2lCMFlXSnNaWE1nYzNScGJHd2dibVZsWkNBblkyVnNiSE53WVdOcGJtYzlYQ0l3WENJbklHbHVJSFJvWlNCdFlYSnJkWEFnS2k5Y2NseHVkR0ZpYkdVZ2UxeHlYRzVjZEdKdmNtUmxjaTFqYjJ4c1lYQnpaVG9nWTI5c2JHRndjMlU3WEhKY2JseDBZbTl5WkdWeUxYTndZV05wYm1jNklEQTdYSEpjYm4xY2NseHVYSEpjYmlJc0lrQm1iMjUwTFdaaFkyVWdlMXh5WEc0Z0lDQWdabTl1ZEMxbVlXMXBiSGs2SUZ3aVNXNTBjbTljSWpzZ1hISmNiaUFnSUNCemNtTTZJSFZ5YkNoY0lpNHVMMlp2Ym5SekwybHVkSEp2TDJsdWRISnZMbTkwWmx3aUtTQm1iM0p0WVhRb1hDSjBjblZsZEhsd1pWd2lLVHNnWEhKY2JpQWdJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3SUZ4eVhHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklEUXdNRHNnWEhKY2JpQWdJQ0I5TzF4eVhHNUFabTl1ZEMxbVlXTmxJSHRjY2x4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lCY0lsQjBjMkZ1YzF3aU95QmNjbHh1SUNBZ0lITnlZem9nZFhKc0tGd2lMaTR2Wm05dWRITXZjSFJ6WVc1ekwxQlVVMkZ1Y3kxQ2IyeGtMblIwWmx3aUtTQm1iM0p0WVhRb1hDSjBjblZsZEhsd1pWd2lLVHNnWEhKY2JpQWdJQ0JtYjI1MExYTjBlV3hsT2lCdWIzSnRZV3c3SUZ4eVhHNGdJQ0FnWm05dWRDMTNaV2xuYUhRNklEY3dNRHNnWEhKY2JpQWdJQ0I5SUZ4eVhHNUFabTl1ZEMxbVlXTmxJSHRjY2x4dUlDQWdJR1p2Ym5RdFptRnRhV3g1T2lCY0lsQjBjMkZ1YzF3aU95QmNjbHh1SUNBZ0lITnlZem9nZFhKc0tGd2lMaTR2Wm05dWRITXZjSFJ6WVc1ekwxQlVVMkZ1Y3kxU1pXZDFiR0Z5TG5SMFpsd2lLU0JtYjNKdFlYUW9YQ0owY25WbGRIbHdaVndpS1RzZ1hISmNiaUFnSUNCbWIyNTBMWE4wZVd4bE9pQnViM0p0WVd3N0lGeHlYRzRnSUNBZ1ptOXVkQzEzWldsbmFIUTZJRFF3TURzZ1hISmNiaUFnSUNCOUlDSXNJaTVqYjI1MFlXbHVaWEpjY2x4dUlDQWdJSGRwWkhSb09pQXhOekV3Y0hoY2NseHVJQ0FnSUcxaGNtZHBiam9nTUNCaGRYUnZJaXdpTG1obFlXUmxjbHh5WEc0Z0lDQWdhR1ZwWjJoME9pQXhNREZ3ZUZ4eVhHNGdJQ0FnWEhKY2JpQWdJQ0FtWDE5amIyNTBZV2x1WlhKY2NseHVJQ0FnSUNBZ0lDQmthWE53YkdGNU9pQm1iR1Y0WEhKY2JpQWdJQ0FtWDE5c2IyZHZYSEpjYmlBZ0lDQWdJQ0FnYUdWcFoyaDBPaUF4TURGd2VGeHlYRzRnSUNBZ0psOWZjM1ZpTFcxbGJuVmNjbHh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJ1YjI1bFhISmNiaUFnSUNBZ0lDQWdjRzl6YVhScGIyNDZJR0ZpYzI5c2RYUmxYSEpjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkRvZ0kwVkdSamRHUTF4eVhHNGdJQ0FnSUNBZ0lIZHBaSFJvT2lBeU1qWndlRnh5WEc0Z0lDQWdJQ0FnSUd4bFpuUTZJQzB6TW5CNFhISmNiaUFnSUNBZ0lDQWdkRzl3T2lBMU5uQjRYSEpjYmlBZ0lDQWdJQ0FnY0dGa1pHbHVaem9nSURFeWNIZ2dNVFJ3ZUNBeU1IQjRJREUyY0hoY2NseHVJQ0FnSUNBZ0lDQmliM0prWlhJdGRHOXdPaUF4Y0hnZ2MyOXNhV1FnSTBNNFJEUkVRMXh5WEc0Z0lDQWdJQ0FnSUdKdmNtUmxjaTF5WVdScGRYTTZJREFnTUNBMmNIZ2dObkI0SUZ4eVhHNGdJQ0FnSUNBZ0lDWXRhWFJsYlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0J3WVdSa2FXNW5PaUEzY0hnZ01DQTRjSGdnTVRSd2VGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCaWIzSmtaWEl0WW05MGRHOXRPaUF4Y0hnZ2MyOXNhV1FnSTBNNFJEUkVRMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTWpGNGNIaGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0pqcHNZWE4wTFdOb2FXeGtYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JpYjNKa1pYSXRZbTkwZEc5dE9pQXdjSGhjY2x4dUlDQWdJQ0FnSUNCaFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UWndlRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFdaaGJXbHNlVG9nSjFCMGMyRnVjeWRjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SURRd01GeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSkdKaGMybHJYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lGeHlYRzVjY2x4dUlDQWdJQ1pmWDJ4bFpuUXRjMmxrWlZ4eVhHNGdJQ0FnSUNBZ0lHUnBjM0JzWVhrNklHWnNaWGhjY2x4dUlDQWdJQ1pmWDI1aGJXVmNjbHh1SUNBZ0lDQWdJQ0J3WVdSa2FXNW5MWFJ2Y0RvZ01UZHdlRnh5WEc0Z0lDQWdJQ0FnSUNZdGRHOXdYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lHWnZiblF0Wm1GdGFXeDVPaUFuVUhSellXNXpKMXh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQm1iMjUwTFhkbGFXZG9kRG9nTnpBd1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRjMmw2WlRvZ01UWndlRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnNhVzVsTFdobGFXZG9kRG9nTWpGd2VGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamIyeHZjam9nSkdKaGMybHJYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lIUmxlSFF0ZEhKaGJuTm1iM0p0T2lCMWNIQmxjbU5oYzJWY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnY0dGa1pHbHVaeTFzWldaME9pQTBjSGhjY2x4dUlDQWdJQ0FnSUNBbUxYTjFZbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQndZV1JrYVc1bkxYUnZjRG9nTkhCNFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQW5TVzUwY204blhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdOdmJHOXlPaUFrYkc5bmIxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCMFpYaDBMWFJ5WVc1elptOXliVG9nZFhCd1pYSmpZWE5sWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR1p2Ym5RdGMybDZaVG9nTWpSd2VGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCc2FXNWxMV2hsYVdkb2REb2dNalJ3ZUZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JtYjI1MExYZGxhV2RvZERvZ05EQXdYSEpjYmlBZ0lDQW1YMTl0Wlc1MVhISmNiaUFnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dabXhsZUZ4eVhHNGdJQ0FnSUNBZ0lHcDFjM1JwWm5rdFkyOXVkR1Z1ZERvZ2MzQmhZMlV0WW1WMGQyVmxibHh5WEc0Z0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQW5VSFJ6WVc1ekoxeHlYRzRnSUNBZ0lDQWdJR1p2Ym5RdGQyVnBaMmgwT2lBME1EQmNjbHh1SUNBZ0lDQWdJQ0JtYjI1MExYTnBlbVU2SURFMmNIaGNjbHh1SUNBZ0lDQWdJQ0JvWldsbmFIUTZJREV3TVhCNFhISmNiaUFnSUNBZ0lDQWdZV3hwWjI0dGFYUmxiWE02SUdObGJuUmxjbHh5WEc0Z0lDQWdJQ0FnSUd4cGJtVXRhR1ZwWjJoME9pQXlNWEI0WEhKY2JpQWdJQ0FnSUNBZ2JXRnlaMmx1TFd4bFpuUTZJRGN4Y0hoY2NseHVJQ0FnSUNBZ0lDQmhJRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pHSmhjMmxyWEhKY2JpQWdJQ0FnSUNBZ0ppMXBkR1Z0WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJSEJ2YzJsMGFXOXVPaUJ5Wld4aGRHbDJaVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nTnpGd2VGeHlYRzRnSUNBZ0lDQWdJQ0FnSUNCamRYSnpiM0k2SUhCdmFXNTBaWEpjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdKam82WW1WbWIzSmxYSEpjYmlBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0JqYjI1MFpXNTBPaUJjSWx3aVhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQndiM05wZEdsdmJqb2dZV0p6YjJ4MWRHVmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJSFJ2Y0RvZ01UQXdKVnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnYkdWbWREb2dMVE13Y0hoY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHaGxhV2RvZERvZ05EQndlRnh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnZDJsa2RHZzZJREl5Tm5CNFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FtT21acGNuTjBMV05vYVd4a1hISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nTUZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FtT214aGMzUXRZMmhwYkdSY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lHMWhjbWRwYmkxc1pXWjBPaUExTlhCNFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNZNmFHOTJaWEpjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdsdFoxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhSeVlXNXpabTl5YlRvZ2NtOTBZWFJsS0RFNE1HUmxaeWxjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUM1b1pXRmtaWEpmWDNOMVlpMXRaVzUxWEhKY2JpQWdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dZbXh2WTJ0Y2NseHVJQ0FnSUNBZ0lDQWdJQ0FnYVcxblhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm9aV2xuYUhRNklERXljSGhjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUhkcFpIUm9PaUF4TW5CNFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQnRZWEpuYVc0dGJHVm1kRG9nT0hCNFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQm1hV3hzT2lBa1ltRnphV3RjY2x4dUlDQWdJQ1pmWDNOdlkybGhiRnh5WEc0Z0lDQWdJQ0FnSUdScGMzQnNZWGs2SUdac1pYaGNjbHh1SUNBZ0lDQWdJQ0JxZFhOMGFXWjVMV052Ym5SbGJuUTZJSE53WVdObExXSmxkSGRsWlc1Y2NseHVJQ0FnSUNBZ0lDQnRZWEpuYVc0dFltOTBkRzl0T2lBMmNIaGNjbHh1SUNBZ0lDQWdJQ0FtTFdsMFpXMWNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2QybGtkR2c2SURJd2NIaGNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeU1IQjRJQ0FnSUNCY2NseHVJQ0FnSUNBZ0lDQWdJQ0FnSmpwb2IzWmxjbHh5WEc0Z0lDQWdJQ0FnSUNBZ0lDQWdJQ0FnWm1sc2JEb2dKR0poYzJsclhISmNiaUFnSUNBbVgxOXlhV2RvZEMxemFXUmxYSEpjYmlBZ0lDQWdJQ0FnYldGeVoybHVMV3hsWm5RNklESXhNWEI0WEhKY2JpQWdJQ0FnSUNBZ1pHbHpjR3hoZVRvZ1pteGxlRnh5WEc0Z0lDQWdJQ0FnSUhkcFpIUm9PaUF6TVRGd2VGeHlYRzRnSUNBZ0lDQWdJR2hsYVdkb2REb2dNVEF4Y0hoY2NseHVJQ0FnSUNBZ0lDQnFkWE4wYVdaNUxXTnZiblJsYm5RNklITndZV05sTFdKbGRIZGxaVzVjY2x4dUlDQWdJQ0FnSUNCd1lXUmthVzVuTFhSdmNEb2dObkI0WEhKY2JpQWdJQ0FnSUNBZ2FuVnpkR2xtZVMxcGRHVnRjem9nWlc1a1hISmNiaUFnSUNBbVgxOWpiMjUwWVdOMFhISmNiaUFnSUNBZ0lDQWdkMmxrZEdnNklESTBOSEI0WEhKY2JpQWdJQ0FtWDE5elpXRnlZMmhjY2x4dUlDQWdJQ0FnSUNCdFlYSm5hVzR0ZEc5d09pQXpNSEI0WEhKY2JpQWdJQ0FnSUNBZ1ltOXlaR1Z5TFhKaFpHbDFjem9nTVRBd0pWeHlYRzRnSUNBZ0lDQWdJR0p2Y21SbGNqb2dNbkI0SUhOdmJHbGtJQ1JuY205MWNGeHlYRzRnSUNBZ0lDQWdJSGRwWkhSb09pQXlOSEI0WEhKY2JpQWdJQ0FnSUNBZ2FHVnBaMmgwT2lBeU5IQjRYSEpjYmlBZ0lDQWdJQ0FnWW1GamEyZHliM1Z1WkMxcGJXRm5aVG9nZFhKc0tGd2lMaTR2YVcxbkwzTmxZWEpqYUM5elpXRnlZMmd1YzNablhDSXBJRzV2TFhKbGNHVmhkRnh5WEc0Z0lDQWdJQ0FnSUdKaFkydG5jbTkxYm1RdGNHOXphWFJwYjI0NklHTmxiblJsY2x4eVhHNGdJQ0FnSUNBZ1hISmNiaUFnSUNBZ0lDQWdKanBtYjJOMWN5d2dKanBoWTNScGRtVmNjbHh1SUNBZ0lDQWdJQ0FnSUNBZ1ltRmphMmR5YjNWdVpDMXdiM05wZEdsdmJqb2dNVEF4SlNCalpXNTBaWEpjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklESXdNSEI0WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0p2Y21SbGNpMXlZV1JwZFhNNklERTFjSGhjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdiV0Z5WjJsdUxXeGxablE2TFRFM05uQjRYSEpjYmlBZ0lDQmNjbHh1SUNBZ0lDWmZYMjFsYzNOaFoyVmNjbHh1SUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNFhISmNiaUFnSUNBZ0lDQWdhR1ZwWjJoME9pQXlPWEI0WEhKY2JpQWdJQ0FnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNseHlYRzRnSUNBZ0lDQWdJR3AxYzNScFpua3RZMjl1ZEdWdWREb2djM0JoWTJVdFltVjBkMlZsYmx4eVhHNGdJQ0FnSUNBZ0lDWXRhWFJsYlZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0JrYVhOd2JHRjVPaUJtYkdWNFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUdsdFoxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdkMmxrZEdnNklESTBjSGhjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUcxaGNtZHBiaTF5YVdkb2REb2dPSEI0WEhKY2JpQWdJQ0FnSUNBZ0lDQWdJR0ZjY2x4dUlDQWdJQ0FnSUNBZ0lDQWdJQ0FnSUdadmJuUXRabUZ0YVd4NU9pQW5VSFJ6WVc1ekoxeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxM1pXbG5hSFE2SURRd01GeHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdaR2x6Y0d4aGVUb2dabXhsZUZ4eVhHNGdJQ0FnSUNBZ0lDQWdJQ0FnSUNBZ1lXeHBaMjR0YVhSbGJYTTZJR05sYm5SbGNseHlYRzRnSUNBZ0lDQWdJQ0FnSUNBZ0lDQWdabTl1ZEMxemFYcGxPaUF4T0hCNFhISmNiaUFnSUNBZ0lDQWdJQ0FnSUNBZ0lDQmpiMnh2Y2pvZ0pHSmhjMmxySWl3aUpHeHZaMjhnT2lBak1UWTRZalZoWEhKY2JpUmlZWE5wYXpvZ0l6UXdORFUwTVZ4eVhHNGtaM0p2ZFhBNklDTTRZVGhsT1RBaVhYMD0gKi8iLCIuY29udGFpbmVyXHJcbiAgICB3aWR0aDogMTcxMHB4XHJcbiAgICBtYXJnaW46IDAgYXV0byIsImJvZHkge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xufVxuXG5pbWcge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xufVxuXG51bCwgbGksIGEge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG4gIGxlZnQ6IDA7XG4gIGxpc3Qtc3R5bGU6IG5vbmU7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbn1cblxuaHRtbCwgYm9keSwgZGl2LCBzcGFuLCBhcHBsZXQsIG9iamVjdCwgaWZyYW1lLFxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxuYSwgYWJiciwgYWNyb255bSwgYWRkcmVzcywgYmlnLCBjaXRlLCBjb2RlLFxuZGVsLCBkZm4sIGVtLCBmb250LCBpbWcsIGlucywga2JkLCBxLCBzLCBzYW1wLFxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcbmIsIHUsIGksIGNlbnRlcixcbmRsLCBkdCwgZGQsIG9sLCB1bCwgbGksXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcbnRhYmxlLCBjYXB0aW9uLCB0Ym9keSwgdGZvb3QsIHRoZWFkLCB0ciwgdGgsIHRkIHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBib3JkZXI6IDA7XG4gIG91dGxpbmU6IDA7XG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcbn1cblxuYm9keSB7XG4gIGxpbmUtaGVpZ2h0OiAxO1xufVxuXG5vbCwgdWwge1xuICBsaXN0LXN0eWxlOiBub25lO1xufVxuXG5ibG9ja3F1b3RlLCBxIHtcbiAgcXVvdGVzOiBub25lO1xufVxuXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcbnE6YmVmb3JlLCBxOmFmdGVyIHtcbiAgY29udGVudDogXCJcIjtcbiAgY29udGVudDogbm9uZTtcbn1cblxuLyogcmVtZW1iZXIgdG8gZGVmaW5lIGZvY3VzIHN0eWxlcyEgKi9cbjpmb2N1cyB7XG4gIG91dGxpbmU6IDA7XG59XG5cbi8qIHJlbWVtYmVyIHRvIGhpZ2hsaWdodCBpbnNlcnRzIHNvbWVob3chICovXG5pbnMge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG59XG5cbmRlbCB7XG4gIHRleHQtZGVjb3JhdGlvbjogbGluZS10aHJvdWdoO1xufVxuXG4vKiB0YWJsZXMgc3RpbGwgbmVlZCAnY2VsbHNwYWNpbmc9XCIwXCInIGluIHRoZSBtYXJrdXAgKi9cbnRhYmxlIHtcbiAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTtcbiAgYm9yZGVyLXNwYWNpbmc6IDA7XG59XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJJbnRyb1wiO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL2ludHJvL2ludHJvLm90ZlwiKSBmb3JtYXQoXCJ0cnVldHlwZVwiKTtcbiAgZm9udC1zdHlsZTogbm9ybWFsO1xuICBmb250LXdlaWdodDogNDAwO1xufVxuQGZvbnQtZmFjZSB7XG4gIGZvbnQtZmFtaWx5OiBcIlB0c2Fuc1wiO1xuICBzcmM6IHVybChcIi4uL2ZvbnRzL3B0c2Fucy9QVFNhbnMtQm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7XG4gIGZvbnQtc3R5bGU6IG5vcm1hbDtcbiAgZm9udC13ZWlnaHQ6IDcwMDtcbn1cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogXCJQdHNhbnNcIjtcbiAgc3JjOiB1cmwoXCIuLi9mb250cy9wdHNhbnMvUFRTYW5zLVJlZ3VsYXIudHRmXCIpIGZvcm1hdChcInRydWV0eXBlXCIpO1xuICBmb250LXN0eWxlOiBub3JtYWw7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG4uY29udGFpbmVyIHtcbiAgd2lkdGg6IDE3MTBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG5cbi5oZWFkZXIge1xuICBoZWlnaHQ6IDEwMXB4O1xufVxuLmhlYWRlcl9fY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbn1cbi5oZWFkZXJfX2xvZ28ge1xuICBoZWlnaHQ6IDEwMXB4O1xufVxuLmhlYWRlcl9fc3ViLW1lbnUge1xuICBkaXNwbGF5OiBub25lO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJhY2tncm91bmQ6ICNFRkY3RkM7XG4gIHdpZHRoOiAyMjZweDtcbiAgbGVmdDogLTMycHg7XG4gIHRvcDogNTZweDtcbiAgcGFkZGluZzogMTJweCAxNHB4IDIwcHggMTZweDtcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNDOEQ0REM7XG4gIGJvcmRlci1yYWRpdXM6IDAgMCA2cHggNnB4O1xufVxuLmhlYWRlcl9fc3ViLW1lbnUtaXRlbSB7XG4gIHBhZGRpbmc6IDdweCAwIDhweCAxNHB4O1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI0M4RDREQztcbiAgbGluZS1oZWlnaHQ6IDIxeHB4O1xufVxuLmhlYWRlcl9fc3ViLW1lbnUtaXRlbTpsYXN0LWNoaWxkIHtcbiAgYm9yZGVyLWJvdHRvbTogMHB4O1xufVxuLmhlYWRlcl9fc3ViLW1lbnUgYSB7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgZm9udC1mYW1pbHk6IFwiUHRzYW5zXCI7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG4gIGNvbG9yOiAjNDA0NTQxO1xufVxuLmhlYWRlcl9fbGVmdC1zaWRlIHtcbiAgZGlzcGxheTogZmxleDtcbn1cbi5oZWFkZXJfX25hbWUge1xuICBwYWRkaW5nLXRvcDogMTdweDtcbn1cbi5oZWFkZXJfX25hbWUtdG9wIHtcbiAgZm9udC1mYW1pbHk6IFwiUHRzYW5zXCI7XG4gIGZvbnQtd2VpZ2h0OiA3MDA7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgbGluZS1oZWlnaHQ6IDIxcHg7XG4gIGNvbG9yOiAjNDA0NTQxO1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBwYWRkaW5nLWxlZnQ6IDRweDtcbn1cbi5oZWFkZXJfX25hbWUtc3ViIHtcbiAgcGFkZGluZy10b3A6IDRweDtcbiAgZm9udC1mYW1pbHk6IFwiSW50cm9cIjtcbiAgY29sb3I6ICMxNjhiNWE7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgbGluZS1oZWlnaHQ6IDI0cHg7XG4gIGZvbnQtd2VpZ2h0OiA0MDA7XG59XG4uaGVhZGVyX19tZW51IHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xuICBmb250LWZhbWlseTogXCJQdHNhbnNcIjtcbiAgZm9udC13ZWlnaHQ6IDQwMDtcbiAgZm9udC1zaXplOiAxNnB4O1xuICBoZWlnaHQ6IDEwMXB4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBsaW5lLWhlaWdodDogMjFweDtcbiAgbWFyZ2luLWxlZnQ6IDcxcHg7XG59XG4uaGVhZGVyX19tZW51IGEge1xuICBjb2xvcjogIzQwNDU0MTtcbn1cbi5oZWFkZXJfX21lbnUtaXRlbSB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luLWxlZnQ6IDcxcHg7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cbi5oZWFkZXJfX21lbnUtaXRlbTo6YmVmb3JlIHtcbiAgY29udGVudDogXCJcIjtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICB0b3A6IDEwMCU7XG4gIGxlZnQ6IC0zMHB4O1xuICBoZWlnaHQ6IDQwcHg7XG4gIHdpZHRoOiAyMjZweDtcbn1cbi5oZWFkZXJfX21lbnUtaXRlbTpmaXJzdC1jaGlsZCB7XG4gIG1hcmdpbi1sZWZ0OiAwO1xufVxuLmhlYWRlcl9fbWVudS1pdGVtOmxhc3QtY2hpbGQge1xuICBtYXJnaW4tbGVmdDogNTVweDtcbn1cbi5oZWFkZXJfX21lbnUtaXRlbTpob3ZlciBpbWcge1xuICB0cmFuc2Zvcm06IHJvdGF0ZSgxODBkZWcpO1xufVxuLmhlYWRlcl9fbWVudS1pdGVtOmhvdmVyIC5oZWFkZXJfX3N1Yi1tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG4uaGVhZGVyX19tZW51LWl0ZW0gaW1nIHtcbiAgaGVpZ2h0OiAxMnB4O1xuICB3aWR0aDogMTJweDtcbiAgbWFyZ2luLWxlZnQ6IDhweDtcbiAgZmlsbDogIzQwNDU0MTtcbn1cbi5oZWFkZXJfX3NvY2lhbCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luLWJvdHRvbTogNnB4O1xufVxuLmhlYWRlcl9fc29jaWFsLWl0ZW0ge1xuICB3aWR0aDogMjBweDtcbiAgaGVpZ2h0OiAyMHB4O1xufVxuLmhlYWRlcl9fc29jaWFsLWl0ZW06aG92ZXIge1xuICBmaWxsOiAjNDA0NTQxO1xufVxuLmhlYWRlcl9fcmlnaHQtc2lkZSB7XG4gIG1hcmdpbi1sZWZ0OiAyMTFweDtcbiAgZGlzcGxheTogZmxleDtcbiAgd2lkdGg6IDMxMXB4O1xuICBoZWlnaHQ6IDEwMXB4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIHBhZGRpbmctdG9wOiA2cHg7XG4gIGp1c3RpZnktaXRlbXM6IGVuZDtcbn1cbi5oZWFkZXJfX2NvbnRhY3Qge1xuICB3aWR0aDogMjQ0cHg7XG59XG4uaGVhZGVyX19zZWFyY2gge1xuICBtYXJnaW4tdG9wOiAzMHB4O1xuICBib3JkZXItcmFkaXVzOiAxMDAlO1xuICBib3JkZXI6IDJweCBzb2xpZCAjOGE4ZTkwO1xuICB3aWR0aDogMjRweDtcbiAgaGVpZ2h0OiAyNHB4O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvc2VhcmNoL3NlYXJjaC5zdmdcIikgbm8tcmVwZWF0O1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG59XG4uaGVhZGVyX19zZWFyY2g6Zm9jdXMsIC5oZWFkZXJfX3NlYXJjaDphY3RpdmUge1xuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDElIGNlbnRlcjtcbiAgd2lkdGg6IDIwMHB4O1xuICBib3JkZXItcmFkaXVzOiAxNXB4O1xuICBtYXJnaW4tbGVmdDogLTE3NnB4O1xufVxuLmhlYWRlcl9fbWVzc2FnZSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGhlaWdodDogMjlweDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xufVxuLmhlYWRlcl9fbWVzc2FnZS1pdGVtIHtcbiAgZGlzcGxheTogZmxleDtcbn1cbi5oZWFkZXJfX21lc3NhZ2UtaXRlbSBpbWcge1xuICB3aWR0aDogMjRweDtcbiAgbWFyZ2luLXJpZ2h0OiA4cHg7XG59XG4uaGVhZGVyX19tZXNzYWdlLWl0ZW0gYSB7XG4gIGZvbnQtZmFtaWx5OiBcIlB0c2Fuc1wiO1xuICBmb250LXdlaWdodDogNDAwO1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBmb250LXNpemU6IDE4cHg7XG4gIGNvbG9yOiAjNDA0NTQxO1xufSIsImh0bWwsIGJvZHksIGRpdiwgc3BhbiwgYXBwbGV0LCBvYmplY3QsIGlmcmFtZSxcclxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwgcCwgYmxvY2txdW90ZSwgcHJlLFxyXG5hLCBhYmJyLCBhY3JvbnltLCBhZGRyZXNzLCBiaWcsIGNpdGUsIGNvZGUsXHJcbmRlbCwgZGZuLCBlbSwgZm9udCwgaW1nLCBpbnMsIGtiZCwgcSwgcywgc2FtcCxcclxuc21hbGwsIHN0cmlrZSwgc3Ryb25nLCBzdWIsIHN1cCwgdHQsIHZhcixcclxuYiwgdSwgaSwgY2VudGVyLFxyXG5kbCwgZHQsIGRkLCBvbCwgdWwsIGxpLFxyXG5maWVsZHNldCwgZm9ybSwgbGFiZWwsIGxlZ2VuZCxcclxudGFibGUsIGNhcHRpb24sIHRib2R5LCB0Zm9vdCwgdGhlYWQsIHRyLCB0aCwgdGQge1xyXG5cdG1hcmdpbjogMDtcclxuXHRwYWRkaW5nOiAwO1xyXG5cdGJvcmRlcjogMDtcclxuXHRvdXRsaW5lOiAwO1xyXG5cdGZvbnQtc2l6ZTogMTAwJTtcclxuXHR2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcblx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XHJcbn1cclxuYm9keSB7XHJcblx0bGluZS1oZWlnaHQ6IDE7XHJcbn1cclxub2wsIHVsIHtcclxuXHRsaXN0LXN0eWxlOiBub25lO1xyXG59XHJcbmJsb2NrcXVvdGUsIHEge1xyXG5cdHF1b3Rlczogbm9uZTtcclxufVxyXG5ibG9ja3F1b3RlOmJlZm9yZSwgYmxvY2txdW90ZTphZnRlcixcclxucTpiZWZvcmUsIHE6YWZ0ZXIge1xyXG5cdGNvbnRlbnQ6ICcnO1xyXG5cdGNvbnRlbnQ6IG5vbmU7XHJcbn1cclxuXHJcbi8qIHJlbWVtYmVyIHRvIGRlZmluZSBmb2N1cyBzdHlsZXMhICovXHJcbjpmb2N1cyB7XHJcblx0b3V0bGluZTogMDtcclxufVxyXG5cclxuLyogcmVtZW1iZXIgdG8gaGlnaGxpZ2h0IGluc2VydHMgc29tZWhvdyEgKi9cclxuaW5zIHtcclxuXHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuZGVsIHtcclxuXHR0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcclxufVxyXG5cclxuLyogdGFibGVzIHN0aWxsIG5lZWQgJ2NlbGxzcGFjaW5nPVwiMFwiJyBpbiB0aGUgbWFya3VwICovXHJcbnRhYmxlIHtcclxuXHRib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlO1xyXG5cdGJvcmRlci1zcGFjaW5nOiAwO1xyXG59XHJcblxyXG4iLCJAZm9udC1mYWNlIHtcclxuICAgIGZvbnQtZmFtaWx5OiBcIkludHJvXCI7IFxyXG4gICAgc3JjOiB1cmwoXCIuLi9mb250cy9pbnRyby9pbnRyby5vdGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7IFxyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsOyBcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7IFxyXG4gICAgfTtcclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogXCJQdHNhbnNcIjsgXHJcbiAgICBzcmM6IHVybChcIi4uL2ZvbnRzL3B0c2Fucy9QVFNhbnMtQm9sZC50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7IFxyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsOyBcclxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7IFxyXG4gICAgfSBcclxuQGZvbnQtZmFjZSB7XHJcbiAgICBmb250LWZhbWlseTogXCJQdHNhbnNcIjsgXHJcbiAgICBzcmM6IHVybChcIi4uL2ZvbnRzL3B0c2Fucy9QVFNhbnMtUmVndWxhci50dGZcIikgZm9ybWF0KFwidHJ1ZXR5cGVcIik7IFxyXG4gICAgZm9udC1zdHlsZTogbm9ybWFsOyBcclxuICAgIGZvbnQtd2VpZ2h0OiA0MDA7IFxyXG4gICAgfSAiLCIuaGVhZGVyXHJcbiAgICBoZWlnaHQ6IDEwMXB4XHJcbiAgICBcclxuICAgICZfX2NvbnRhaW5lclxyXG4gICAgICAgIGRpc3BsYXk6IGZsZXhcclxuICAgICZfX2xvZ29cclxuICAgICAgICBoZWlnaHQ6IDEwMXB4XHJcbiAgICAmX19zdWItbWVudVxyXG4gICAgICAgIGRpc3BsYXk6IG5vbmVcclxuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGVcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjRUZGN0ZDXHJcbiAgICAgICAgd2lkdGg6IDIyNnB4XHJcbiAgICAgICAgbGVmdDogLTMycHhcclxuICAgICAgICB0b3A6IDU2cHhcclxuICAgICAgICBwYWRkaW5nOiAgMTJweCAxNHB4IDIwcHggMTZweFxyXG4gICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAjQzhENERDXHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMCAwIDZweCA2cHggXHJcbiAgICAgICAgJi1pdGVtXHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDdweCAwIDhweCAxNHB4XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjQzhENERDXHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMXhweFxyXG4gICAgICAgICAgICAmOmxhc3QtY2hpbGRcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDBweFxyXG4gICAgICAgIGFcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4XHJcbiAgICAgICAgICAgIGZvbnQtZmFtaWx5OiAnUHRzYW5zJ1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogNDAwXHJcbiAgICAgICAgICAgIGNvbG9yOiAkYmFzaWtcclxuICAgICAgICAgICAgXHJcblxyXG4gICAgJl9fbGVmdC1zaWRlXHJcbiAgICAgICAgZGlzcGxheTogZmxleFxyXG4gICAgJl9fbmFtZVxyXG4gICAgICAgIHBhZGRpbmctdG9wOiAxN3B4XHJcbiAgICAgICAgJi10b3BcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdQdHNhbnMnXHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA3MDBcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyMXB4XHJcbiAgICAgICAgICAgIGNvbG9yOiAkYmFzaWtcclxuICAgICAgICAgICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZVxyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDRweFxyXG4gICAgICAgICYtc3ViXHJcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiA0cHhcclxuICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdJbnRybydcclxuICAgICAgICAgICAgY29sb3I6ICRsb2dvXHJcbiAgICAgICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2VcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyNHB4XHJcbiAgICAgICAgICAgIGxpbmUtaGVpZ2h0OiAyNHB4XHJcbiAgICAgICAgICAgIGZvbnQtd2VpZ2h0OiA0MDBcclxuICAgICZfX21lbnVcclxuICAgICAgICBkaXNwbGF5OiBmbGV4XHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuXHJcbiAgICAgICAgZm9udC1mYW1pbHk6ICdQdHNhbnMnXHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMFxyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweFxyXG4gICAgICAgIGhlaWdodDogMTAxcHhcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyXHJcbiAgICAgICAgbGluZS1oZWlnaHQ6IDIxcHhcclxuICAgICAgICBtYXJnaW4tbGVmdDogNzFweFxyXG4gICAgICAgIGEgXHJcbiAgICAgICAgICAgIGNvbG9yOiAkYmFzaWtcclxuICAgICAgICAmLWl0ZW1cclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlXHJcbiAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA3MXB4XHJcbiAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlclxyXG4gICAgICAgICAgICAmOjpiZWZvcmVcclxuICAgICAgICAgICAgICAgIGNvbnRlbnQ6IFwiXCJcclxuICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZVxyXG4gICAgICAgICAgICAgICAgdG9wOiAxMDAlXHJcbiAgICAgICAgICAgICAgICBsZWZ0OiAtMzBweFxyXG4gICAgICAgICAgICAgICAgaGVpZ2h0OiA0MHB4XHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjI2cHhcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgICY6Zmlyc3QtY2hpbGRcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiAwXHJcbiAgICAgICAgICAgICY6bGFzdC1jaGlsZFxyXG4gICAgICAgICAgICAgICAgbWFyZ2luLWxlZnQ6IDU1cHhcclxuICAgICAgICAgICAgJjpob3ZlclxyXG4gICAgICAgICAgICAgICAgaW1nXHJcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoMTgwZGVnKVxyXG4gICAgICAgICAgICAgICAgLmhlYWRlcl9fc3ViLW1lbnVcclxuICAgICAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9ja1xyXG4gICAgICAgICAgICBpbWdcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMTJweFxyXG4gICAgICAgICAgICAgICAgd2lkdGg6IDEycHhcclxuICAgICAgICAgICAgICAgIG1hcmdpbi1sZWZ0OiA4cHhcclxuICAgICAgICAgICAgICAgIGZpbGw6ICRiYXNpa1xyXG4gICAgJl9fc29jaWFsXHJcbiAgICAgICAgZGlzcGxheTogZmxleFxyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlblxyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDZweFxyXG4gICAgICAgICYtaXRlbVxyXG4gICAgICAgICAgICB3aWR0aDogMjBweFxyXG4gICAgICAgICAgICBoZWlnaHQ6IDIwcHggICAgIFxyXG4gICAgICAgICAgICAmOmhvdmVyXHJcbiAgICAgICAgICAgICAgICBmaWxsOiAkYmFzaWtcclxuICAgICZfX3JpZ2h0LXNpZGVcclxuICAgICAgICBtYXJnaW4tbGVmdDogMjExcHhcclxuICAgICAgICBkaXNwbGF5OiBmbGV4XHJcbiAgICAgICAgd2lkdGg6IDMxMXB4XHJcbiAgICAgICAgaGVpZ2h0OiAxMDFweFxyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlblxyXG4gICAgICAgIHBhZGRpbmctdG9wOiA2cHhcclxuICAgICAgICBqdXN0aWZ5LWl0ZW1zOiBlbmRcclxuICAgICZfX2NvbnRhY3RcclxuICAgICAgICB3aWR0aDogMjQ0cHhcclxuICAgICZfX3NlYXJjaFxyXG4gICAgICAgIG1hcmdpbi10b3A6IDMwcHhcclxuICAgICAgICBib3JkZXItcmFkaXVzOiAxMDAlXHJcbiAgICAgICAgYm9yZGVyOiAycHggc29saWQgJGdyb3VwXHJcbiAgICAgICAgd2lkdGg6IDI0cHhcclxuICAgICAgICBoZWlnaHQ6IDI0cHhcclxuICAgICAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvc2VhcmNoL3NlYXJjaC5zdmdcIikgbm8tcmVwZWF0XHJcbiAgICAgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogY2VudGVyXHJcbiAgICAgICBcclxuICAgICAgICAmOmZvY3VzLCAmOmFjdGl2ZVxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiAxMDElIGNlbnRlclxyXG4gICAgICAgICAgICB3aWR0aDogMjAwcHhcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMTVweFxyXG4gICAgICAgICAgICBtYXJnaW4tbGVmdDotMTc2cHhcclxuICAgIFxyXG4gICAgJl9fbWVzc2FnZVxyXG4gICAgICAgIGRpc3BsYXk6IGZsZXhcclxuICAgICAgICBoZWlnaHQ6IDI5cHhcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyXHJcbiAgICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuXHJcbiAgICAgICAgJi1pdGVtXHJcbiAgICAgICAgICAgIGRpc3BsYXk6IGZsZXhcclxuICAgICAgICAgICAgaW1nXHJcbiAgICAgICAgICAgICAgICB3aWR0aDogMjRweFxyXG4gICAgICAgICAgICAgICAgbWFyZ2luLXJpZ2h0OiA4cHhcclxuICAgICAgICAgICAgYVxyXG4gICAgICAgICAgICAgICAgZm9udC1mYW1pbHk6ICdQdHNhbnMnXHJcbiAgICAgICAgICAgICAgICBmb250LXdlaWdodDogNDAwXHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBmbGV4XHJcbiAgICAgICAgICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyXHJcbiAgICAgICAgICAgICAgICBmb250LXNpemU6IDE4cHhcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAkYmFzaWsiXX0= */